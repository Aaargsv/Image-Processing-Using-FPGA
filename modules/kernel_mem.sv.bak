module kernel_mem
    #(
        parameter KERNEL_NUM_ELEMENTS,
        parameter DATA_KERNEL_WIDTH
    )
    (
        input  logic                                          i_clk,
        input  logic          [2 : 0]                         i_kernel_address,
        output logic signed   [DATA_KERNEL_WIDTH   - 1 : 0]   o_kernel          [1 : 0][KERNEL_NUM_ELEMENTS  - 1 : 0]
    );

    always_ff @(posedge i_clk)
        begin
            case(i_kernel_address)
                0 : o_kernel <=
                    '{ 0,  0, 0,
                       0,  1, 0,
                       0,  0, 0  }; //identity

                1 : o_kernel <=
                    '{  1,  1,  1,
                        1, -8,  1,
                        1,  1,  1 }; //sharpening
                2 : o_kernel <=
                    '{  -1, -1, -1,
                        -1,  8, -1,
                        -1, -1, -1 }; //edge detector

                3 : o_kernel <=
                    '{  -1, -1, -1,
                        -1,  8, -1,
                        -1, -1, -1 }; //edge detector

                default : o_kernel <=
                    '{ 0,  0, 0,
                       0,  1, 0,
                       0,  0, 0  }; //identity

endmodule : kernel_mem